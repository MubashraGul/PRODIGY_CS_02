from PIL import Image

def encrypt_image(image_path, key):
    # Open the image
    img = Image.open(image_path)
    width, height = img.size

    # Convert image to RGB mode
    img = img.convert("RGB")

    # Apply encryption algorithm
    for y in range(height):
        for x in range(width):
            r, g, b = img.getpixel((x, y))

            # Example encryption: swapping pixel values
            r = (r + key) % 256
            g = (g + key) % 256
            b = (b + key) % 256

            img.putpixel((x, y), (r, g, b))

    # Save encrypted image
    encrypted_image_path = image_path.split('.')[0] + '_encrypted.png'
    img.save(encrypted_image_path)
    print("Image encrypted successfully!")

def decrypt_image(encrypted_image_path, key):
    # Open the encrypted image
    img = Image.open(encrypted_image_path)
    width, height = img.size

    # Convert image to RGB mode
    img = img.convert("RGB")

    # Apply decryption algorithm
    for y in range(height):
        for x in range(width):
            r, g, b = img.getpixel((x, y))

            # Example decryption: reversing the encryption operation
            r = (r - key) % 256
            g = (g - key) % 256
            b = (b - key) % 256

            img.putpixel((x, y), (r, g, b))

    # Save decrypted image
    decrypted_image_path = encrypted_image_path.split('_encrypted')[0] + '_decrypted.png'
    img.save(decrypted_image_path)
    print("Image decrypted successfully!")

# Example usage
image_path = "example.png"
key = 50
encrypt_image(image_path, key)
decrypt_image("example_encrypted.png", key)
